/* *  File:       X3DTriMesh.h *  Summary:	Efficient mesh with uniform attributes. *  Written by: Jesse Jones * *  Copyright © 1997 Jesse Jones.  *	This code is distributed under the zlib/libpng license (see License.txt for details).   * *  Change History (most recent first): * *		$Log: X3DTriMesh.h,v $ *		Revision 1.3  2000/12/13 08:55:29  jesjones *		More doxyfying. *		 *		Revision 1.2  2000/11/09 12:23:15  jesjones *		1) Removed double CRs introduced during the initial checkin. 2) Changed the header comments to make it clearer that Whisper is using the zlib license agreement. 3) Added the $Log: X3DTriMesh.h,v $ *		1) Removed double CRs introduced during the initial checkin. 2) Changed the header comments to make it clearer that Whisper is using the zlib license agreement. 3) Added the Revision 1.3  2000/12/13 08:55:29  jesjones *		1) Removed double CRs introduced during the initial checkin. 2) Changed the header comments to make it clearer that Whisper is using the zlib license agreement. 3) Added the More doxyfying. *		1) Removed double CRs introduced during the initial checkin. 2) Changed the header comments to make it clearer that Whisper is using the zlib license agreement. 3) Added the keyword. *		 *		 <1>	  3/06/97	JDJ		Created. */#pragma once#include <X3DGeometry.h>#include <X3DPrimitives.h>namespace Whisper {#if MULTI_FRAGMENT_APP && PRAGMA_EXPORT_SUPPORTED	#pragma export on#endif// ===================================================================================//	class X3DTriMesh//!		Efficient mesh with uniform attributes (also see X3DUniformTriGrid).// ===================================================================================class QUESA_EXPORT X3DTriMesh : public X3DGeometry {	typedef X3DGeometry Inherited;//-----------------------------------//	Initialization/Destruction//public:	virtual				~X3DTriMesh();												X3DTriMesh(const TQ3TriMeshData& data);						X3DTriMesh(TQ3GeometryObject object);							virtual X3DTriMesh* Clone() const;		//-----------------------------------//	New API//public:	//! @name Data	//@{			TQ3TriMeshData GetData() const;									void 		SetData(const TQ3TriMeshData& data);	//@}	//! @name Submitting (retained mode)	//@{			void 		Submit(TQ3ViewObject view) const			{Inherited::Submit(view);}	//@}										//! @name Submitting (immediate mode)	//@{	static	void 		Submit(const TQ3TriMeshData& data, TQ3ViewObject view);	//@}	//! @name Misc	//@{	static	bool 		IsCompatible(TQ3Object object);						/**< Returns true if the QD 3D object can be used to construct a X3DTriMesh. */	//@}};#if MULTI_FRAGMENT_APP && PRAGMA_EXPORT_SUPPORTED	#pragma export reset#endif}	// namespace Whisper