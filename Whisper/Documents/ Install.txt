NEED TO UPDATE THISWhisper 2.0Whisper 2.0 has been compiled with CW Pro 5.2 and the 3.2 Universal Headers (on the Mac).The only problem that I think you're likely to run into is the OpenTransport.h bug mentionedbelow.Whisper 1.3MacWhisper was compiled using CodeWarrior 4.1 and the 3.2 Universal Headers. CodeWarrior 4.1 is a public patch and can be found at the MetroWerks web page (try <http://208.226.102.11/updates.qry>). I think the 3.2 Universal Headers are includedin the patch, but if not you can find them at <http://developer.apple.com/sdk/index.html>.It has also been compiled with a very late Pro 5 beta.The only problem you should have is that OpenTransport.h won't compile with the "InconsistentUse of 'class' and 'struct' Keywords" warning. You can get around this by either disablingthe warning or opening OpenTransport.h and changing the lines that read:	#ifdef __cplusplus	typedef struct TProvider*	ProviderRef;	typedef struct TEndpoint*	EndpointRef;	typedef struct TMapper*		MapperRef;	#else	typedef void*				ProviderRef;	typedef void*				EndpointRef;	typedef void*				MapperRef;	#endifto:	#ifdef __cplusplus	typedef class TProvider*	ProviderRef;	typedef class TEndpoint*	EndpointRef;	typedef class TMapper*		MapperRef;	#else	typedef void*				ProviderRef;	typedef void*				EndpointRef;	typedef void*				MapperRef;	#endif	For Whisper 1.2.1 I've done some work to enable Whisper to work with Pro 3 (and the 3.2Universal Headers). This is not an officially supported platform, but I think it's closeto working. The only real problem I know of is that Pro 3's MSL doesn't support the wideIO functions which causes problems with Whisper's debugging functions.WinOn Windows I've compiled Whisper with MSVC 5 SP3 and CodeWarrior 4.1 (see above). I've tested MSVC with NT 4 and Win 98 and CodeWarrior with NT 4. If you're using MSVC the only problem you're likely to run into are hard-coded paths: in particular the "Whisper\Libraries\Win\Whisper\Includes.txt" file will need to be edited (this file is used by the Whisper project and client projects to set the Whisper include paths. Because this file is used within client projects I wasn't able to use relative paths).You may also need to edit the paths in the .dsp files.Fortunately CodeWarrior's handling of include paths is far better than MSVC's. Howeverthe Windows version of CodeWarrior is not a mature product and is rather quirky. Theonly serious problem I think you'll encounter is that Win CW will produce a link errorbecause Whisper overrides the global operator new. This is perfectly legal and workson the Mac side, but not on Windows (however it works in Pro 5).The easy way to fix this is to goto XWhisperHeader.h, find WHISPER_OPERATOR_NEW, anddefine it to 0 (you'll also have to replace "mwcrtl (NoNew).lib" with "mwcrtl.lib". The better way is to build a NoNew version of the runtime library. To do this:1) Open the "MSL Win32 Runtime.mcp" project. It should be in "Win32-x86 Support\Libraries\Runtime\".2) Create a new target named "MWCRTL Release (NoNew)" by cloning the "MWCRTL Release" target.3) Change the output file name to "mwcrtl (NoNew).lib".4) Remove the newdelarr.cpp, newarrnothrow.cpp, newarrop.cpp, newnothrow.cpp, and newop.cpp    files from the "MWCRTL Release (NoNew)" target.5) Rebuild the NoNew target using the Make command.After doing this Whisper should compile and link without any problems.Jesse Jonesjesjones@halcyon.com